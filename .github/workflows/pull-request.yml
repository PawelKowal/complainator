name: Pull Request Workflow

on:
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Debug step
      - name: Debug - List directory structure
        run: |
          pwd
          echo "Root directory:"
          ls -la
          echo "Backend directory:"
          ls -la ./complainator_backend/
          echo "ComplainatorAPI directory:"
          ls -la ./complainator_backend/ComplainatorAPI/
          echo "Looking for .sln files:"
          find . -name "*.sln"

      # Frontend linting
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "complainator_ui/.nvmrc"
          cache: "npm"
          cache-dependency-path: "complainator_ui/package-lock.json"

      - name: Install frontend dependencies
        working-directory: complainator_ui
        run: npm ci

      - name: Lint frontend
        working-directory: complainator_ui
        run: npm run lint

      # Backend linting (using dotnet format)
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Lint backend
        working-directory: complainator_backend/ComplainatorAPI
        run: dotnet format --verify-no-changes

  unit-tests:
    name: Run Unit Tests
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Backend tests
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Run backend tests with coverage
        working-directory: complainator_backend
        run: dotnet test --collect:"XPlat Code Coverage"

      - name: Upload backend test coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: complainator_backend/**/TestResults/**/coverage.cobertura.xml
          retention-days: 7

  status-comment:
    name: Add Status Comment
    needs: unit-tests
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download backend coverage
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage
          path: backend-coverage

      - name: Create status comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            // Próba odczytania danych pokrycia testów
            let backendCoverage = 'Brak danych';

            try {
              // Odczyt pokrycia backendu
              // Uwaga: Może wymagać dodatkowego narzędzia do parsowania pliku XML
              backendCoverage = 'Zobacz artefakty';
            } catch (err) {
              console.log('Nie można odczytać pokrycia backendu:', err);
            }

            // Tworzenie komentarza
            const comment = `## ✅ Wszystkie testy przeszły pomyślnie!

            ### Pokrycie kodu:
            - Backend: ${backendCoverage}

            *Workflow zakończony: ${new Date().toISOString()}*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
